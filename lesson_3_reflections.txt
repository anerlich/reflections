When would you want to use a remote repository rather than keeping all your 
work local?

If I wish to collaborate with others or make my work available for others to 
look at and download. 
Also as a backup in the cloud.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I might want to track changes locally that I am not ready to commit to a public 
repository to be used or viewed by others.

A fork makes your personal copy of another repository, both on Github.

A clone makes a copy of a repository on your computer either from Github or 
another computer.

A branch is performed in a local repository to give an alternative development
path which may later be merged back in.

What is the benefit of having a copy of the last known state of the remote stored locally?

so you can tell how far apart the local and last known state of the repos
are, and so that any fetching need only concern itself with commits not already
stored in both. I guess?

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

You'd have to keep sending each other stuff and ensure you didn't update stuff
without telling everyone.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Making changes in a branch allows you to work on a new feature while still 
maintaining the master branch with bug fexes, etc. Or allow centralised 
control of updates.
